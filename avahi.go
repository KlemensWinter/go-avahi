package avahi

/*
#cgo pkg-config: avahi-client
#include <avahi-common/defs.h>
#include <avahi-common/error.h>
#include <avahi-client/client.h>
#include <avahi-common/simple-watch.h>
*/
import "C"

import (
	"fmt"
	"unsafe"
)

// http://avahi.org/download/doxygen/error_8h.html#acb801f36563fde5d25b0b2b2cae8dfe0

type Error int

const (
	BROWSER_ALL_FOR_NOW             = C.AVAHI_BROWSER_ALL_FOR_NOW
	BROWSER_CACHE_EXHAUSTED         = C.AVAHI_BROWSER_CACHE_EXHAUSTED
	BROWSER_FAILURE                 = C.AVAHI_BROWSER_FAILURE
	BROWSER_NEW                     = C.AVAHI_BROWSER_NEW
	BROWSER_REMOVE                  = C.AVAHI_BROWSER_REMOVE
	CLIENT_CONNECTING               = C.AVAHI_CLIENT_CONNECTING
	CLIENT_FAILURE                  = C.AVAHI_CLIENT_FAILURE
	CLIENT_IGNORE_USER_CONFIG       = C.AVAHI_CLIENT_IGNORE_USER_CONFIG
	CLIENT_NO_FAIL                  = C.AVAHI_CLIENT_NO_FAIL
	CLIENT_S_COLLISION              = C.AVAHI_CLIENT_S_COLLISION
	CLIENT_S_REGISTERING            = C.AVAHI_CLIENT_S_REGISTERING
	CLIENT_S_RUNNING                = C.AVAHI_CLIENT_S_RUNNING
	DNS_CLASS_IN                    = C.AVAHI_DNS_CLASS_IN
	DNS_TYPE_A                      = C.AVAHI_DNS_TYPE_A
	DNS_TYPE_AAAA                   = C.AVAHI_DNS_TYPE_AAAA
	DNS_TYPE_CNAME                  = C.AVAHI_DNS_TYPE_CNAME
	DNS_TYPE_HINFO                  = C.AVAHI_DNS_TYPE_HINFO
	DNS_TYPE_MX                     = C.AVAHI_DNS_TYPE_MX
	DNS_TYPE_NS                     = C.AVAHI_DNS_TYPE_NS
	DNS_TYPE_PTR                    = C.AVAHI_DNS_TYPE_PTR
	DNS_TYPE_SOA                    = C.AVAHI_DNS_TYPE_SOA
	DNS_TYPE_SRV                    = C.AVAHI_DNS_TYPE_SRV
	DNS_TYPE_TXT                    = C.AVAHI_DNS_TYPE_TXT
	DOMAIN_BROWSER_BROWSE           = C.AVAHI_DOMAIN_BROWSER_BROWSE
	DOMAIN_BROWSER_BROWSE_DEFAULT   = C.AVAHI_DOMAIN_BROWSER_BROWSE_DEFAULT
	DOMAIN_BROWSER_BROWSE_LEGACY    = C.AVAHI_DOMAIN_BROWSER_BROWSE_LEGACY
	DOMAIN_BROWSER_MAX              = C.AVAHI_DOMAIN_BROWSER_MAX
	DOMAIN_BROWSER_REGISTER         = C.AVAHI_DOMAIN_BROWSER_REGISTER
	DOMAIN_BROWSER_REGISTER_DEFAULT = C.AVAHI_DOMAIN_BROWSER_REGISTER_DEFAULT
	ENTRY_GROUP_COLLISION           = C.AVAHI_ENTRY_GROUP_COLLISION
	ENTRY_GROUP_ESTABLISHED         = C.AVAHI_ENTRY_GROUP_ESTABLISHED
	ENTRY_GROUP_FAILURE             = C.AVAHI_ENTRY_GROUP_FAILURE
	ENTRY_GROUP_REGISTERING         = C.AVAHI_ENTRY_GROUP_REGISTERING
	ENTRY_GROUP_UNCOMMITED          = C.AVAHI_ENTRY_GROUP_UNCOMMITED

	ERR_ACCESS_DENIED           = Error(C.AVAHI_ERR_ACCESS_DENIED)
	ERR_BAD_STATE               = Error(C.AVAHI_ERR_BAD_STATE)
	ERR_COLLISION               = Error(C.AVAHI_ERR_COLLISION)
	ERR_DBUS_ERROR              = Error(C.AVAHI_ERR_DBUS_ERROR)
	ERR_DISCONNECTED            = Error(C.AVAHI_ERR_DISCONNECTED)
	ERR_DNS_FORMERR             = Error(C.AVAHI_ERR_DNS_FORMERR)
	ERR_DNS_NOTAUTH             = Error(C.AVAHI_ERR_DNS_NOTAUTH)
	ERR_DNS_NOTIMP              = Error(C.AVAHI_ERR_DNS_NOTIMP)
	ERR_DNS_NOTZONE             = Error(C.AVAHI_ERR_DNS_NOTZONE)
	ERR_DNS_NXDOMAIN            = Error(C.AVAHI_ERR_DNS_NXDOMAIN)
	ERR_DNS_NXRRSET             = Error(C.AVAHI_ERR_DNS_NXRRSET)
	ERR_DNS_REFUSED             = Error(C.AVAHI_ERR_DNS_REFUSED)
	ERR_DNS_SERVFAIL            = Error(C.AVAHI_ERR_DNS_SERVFAIL)
	ERR_DNS_YXDOMAIN            = Error(C.AVAHI_ERR_DNS_YXDOMAIN)
	ERR_DNS_YXRRSET             = Error(C.AVAHI_ERR_DNS_YXRRSET)
	ERR_FAILURE                 = Error(C.AVAHI_ERR_FAILURE)
	ERR_INVALID_ADDRESS         = Error(C.AVAHI_ERR_INVALID_ADDRESS)
	ERR_INVALID_ARGUMENT        = Error(C.AVAHI_ERR_INVALID_ARGUMENT)
	ERR_INVALID_CONFIG          = Error(C.AVAHI_ERR_INVALID_CONFIG)
	ERR_INVALID_DNS_CLASS       = Error(C.AVAHI_ERR_INVALID_DNS_CLASS)
	ERR_INVALID_DNS_ERROR       = Error(C.AVAHI_ERR_INVALID_DNS_ERROR)
	ERR_INVALID_DNS_TYPE        = Error(C.AVAHI_ERR_INVALID_DNS_TYPE)
	ERR_INVALID_DOMAIN_NAME     = Error(C.AVAHI_ERR_INVALID_DOMAIN_NAME)
	ERR_INVALID_FLAGS           = Error(C.AVAHI_ERR_INVALID_FLAGS)
	ERR_INVALID_HOST_NAME       = Error(C.AVAHI_ERR_INVALID_HOST_NAME)
	ERR_INVALID_INTERFACE       = Error(C.AVAHI_ERR_INVALID_INTERFACE)
	ERR_INVALID_KEY             = Error(C.AVAHI_ERR_INVALID_KEY)
	ERR_INVALID_OBJECT          = Error(C.AVAHI_ERR_INVALID_OBJECT)
	ERR_INVALID_OPERATION       = Error(C.AVAHI_ERR_INVALID_OPERATION)
	ERR_INVALID_PACKET          = Error(C.AVAHI_ERR_INVALID_PACKET)
	ERR_INVALID_PORT            = Error(C.AVAHI_ERR_INVALID_PORT)
	ERR_INVALID_PROTOCOL        = Error(C.AVAHI_ERR_INVALID_PROTOCOL)
	ERR_INVALID_RDATA           = Error(C.AVAHI_ERR_INVALID_RDATA)
	ERR_INVALID_RECORD          = Error(C.AVAHI_ERR_INVALID_RECORD)
	ERR_INVALID_SERVICE_NAME    = Error(C.AVAHI_ERR_INVALID_SERVICE_NAME)
	ERR_INVALID_SERVICE_SUBTYPE = Error(C.AVAHI_ERR_INVALID_SERVICE_SUBTYPE)
	ERR_INVALID_SERVICE_TYPE    = Error(C.AVAHI_ERR_INVALID_SERVICE_TYPE)
	ERR_INVALID_TTL             = Error(C.AVAHI_ERR_INVALID_TTL)
	ERR_IS_EMPTY                = Error(C.AVAHI_ERR_IS_EMPTY)
	ERR_IS_PATTERN              = Error(C.AVAHI_ERR_IS_PATTERN)
	ERR_MAX                     = Error(C.AVAHI_ERR_MAX)
	ERR_NO_CHANGE               = Error(C.AVAHI_ERR_NO_CHANGE)
	ERR_NO_DAEMON               = Error(C.AVAHI_ERR_NO_DAEMON)
	ERR_NO_MEMORY               = Error(C.AVAHI_ERR_NO_MEMORY)
	ERR_NO_NETWORK              = Error(C.AVAHI_ERR_NO_NETWORK)
	ERR_NOT_FOUND               = Error(C.AVAHI_ERR_NOT_FOUND)
	ERR_NOT_PERMITTED           = Error(C.AVAHI_ERR_NOT_PERMITTED)
	ERR_NOT_SUPPORTED           = Error(C.AVAHI_ERR_NOT_SUPPORTED)
	ERR_OS                      = Error(C.AVAHI_ERR_OS)
	ERR_TIMEOUT                 = Error(C.AVAHI_ERR_TIMEOUT)
	ERR_TOO_MANY_CLIENTS        = Error(C.AVAHI_ERR_TOO_MANY_CLIENTS)
	ERR_TOO_MANY_ENTRIES        = Error(C.AVAHI_ERR_TOO_MANY_ENTRIES)
	ERR_TOO_MANY_OBJECTS        = Error(C.AVAHI_ERR_TOO_MANY_OBJECTS)
	ERR_VERSION_MISMATCH        = Error(C.AVAHI_ERR_VERSION_MISMATCH)

	IF_UNSPEC               = C.AVAHI_IF_UNSPEC
	LOOKUP_NO_ADDRESS       = C.AVAHI_LOOKUP_NO_ADDRESS
	LOOKUP_NO_TXT           = C.AVAHI_LOOKUP_NO_TXT
	LOOKUP_RESULT_CACHED    = C.AVAHI_LOOKUP_RESULT_CACHED
	LOOKUP_RESULT_LOCAL     = C.AVAHI_LOOKUP_RESULT_LOCAL
	LOOKUP_RESULT_MULTICAST = C.AVAHI_LOOKUP_RESULT_MULTICAST
	LOOKUP_RESULT_OUR_OWN   = C.AVAHI_LOOKUP_RESULT_OUR_OWN
	LOOKUP_RESULT_STATIC    = C.AVAHI_LOOKUP_RESULT_STATIC
	LOOKUP_RESULT_WIDE_AREA = C.AVAHI_LOOKUP_RESULT_WIDE_AREA
	OK                      = C.AVAHI_OK
	PROTO_INET              = C.AVAHI_PROTO_INET
	PROTO_INET6             = C.AVAHI_PROTO_INET6
	PROTO_UNSPEC            = C.AVAHI_PROTO_UNSPEC
	PUBLISH_ALLOW_MULTIPLE  = C.AVAHI_PUBLISH_ALLOW_MULTIPLE
	PUBLISH_NO_ANNOUNCE     = C.AVAHI_PUBLISH_NO_ANNOUNCE
	PUBLISH_NO_PROBE        = C.AVAHI_PUBLISH_NO_PROBE
	PUBLISH_UNIQUE          = C.AVAHI_PUBLISH_UNIQUE
	PUBLISH_UPDAT           = C.AVAHI_PUBLISH_UPDATE
	RESOLVER_FAILURE        = C.AVAHI_RESOLVER_FAILURE
	RESOLVER_FOUND          = C.AVAHI_RESOLVER_FOUND
	SERVER_COLLISION        = C.AVAHI_SERVER_COLLISION
	SERVER_FAILURE          = C.AVAHI_SERVER_FAILURE
	SERVER_INVALID          = C.AVAHI_SERVER_INVALID
	SERVER_REGISTERING      = C.AVAHI_SERVER_REGISTERING
	SERVER_RUNNING          = C.AVAHI_SERVER_RUNNING
	WATCH_ERR               = C.AVAHI_WATCH_ERR
	WATCH_HUP               = C.AVAHI_WATCH_HUP
	WATCH_IN                = C.AVAHI_WATCH_IN
	WATCH_OUT               = C.AVAHI_WATCH_OUT
)

func (self Error) Error() string {
	ret, err := C.avahi_strerror(C.int(self))
	if err != nil {
		panic(err)
	}
	return fmt.Sprint("avahi: ", C.GoString(ret))
}

// Simple Poll
type SimplePoll struct {
	c unsafe.Pointer
}

func NewSimplePoll() (ret *SimplePoll) {
	ret = new(SimplePoll)
	ptr, err := C.avahi_simple_poll_new()
	if err != nil {
		panic(err)
	}
	ret.c = unsafe.Pointer(ptr)
	return
}

func (self *SimplePoll) Loop() (err error) {
	ptr := (*C.AvahiSimplePoll)(self.c)
	//int avahi_simple_poll_loop 	( 	AvahiSimplePoll *  	s	)
	ret, err := C.avahi_simple_poll_loop(ptr)
	if err != nil {
		panic(err)
	}
	return Error(ret)
}

func (self *SimplePoll) Quit() {
	ptr := (*C.AvahiSimplePoll)(self.c)
	//int avahi_simple_poll_loop 	( 	AvahiSimplePoll *  	s	)
	_, err := C.avahi_simple_poll_quit(ptr)
	if err != nil {
		panic(err)
	}
	return
}
